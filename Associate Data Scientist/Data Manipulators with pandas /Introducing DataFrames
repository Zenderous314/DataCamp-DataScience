# Print the head of the homelessness data
print(homelessness.head())

# Print information about homelessness
print(homelessness.info())

# Print the shape of homelessness
print(homelessness.shape)

# Print a description of homelessness
print(homelessness.describe())

# Import pandas using the alias pd
import pandas as pd

# Print the values of homelessness
print(homelessness.values)

# Print the column index of homelessness
print(homelessness.columns)

# Print the row index of homelessness
print(homelessness.index)
# Sort homelessness by individuals
homelessness_ind = homelessness.sort_values("individuals", ascending = True)

# Print the top few rows
print(homelessness_ind.head())

# Sort homelessness by descending family members
homelessness_fam = homelessness.sort_values("family_members", ascending = False)

print(homelessness_fam.head())

# Sort homelessness by region, then descending family members
homelessness_reg_fam = homelessness.sort_values(["region", "family_members"], ascending=[True, False])

# Print the top few rows
print(homelessness_reg_fam.head())

# Create a Series containing only the individuals column from homelessness
individuals = homelessness["individuals"]

# Print the first few rows
print(individuals.head())

# Select only the state and family_members columns from homelessness in that order
state_fam = homelessness[["state", "family_members"]]

# Print the first few rows
print(state_fam.head())

# Create a DataFrame with just the individuals and state columns from homelessness
ind_state = homelessness[["individuals", "state"]]

# Print the first few rows
print(ind_state.head())

# Filter homelessness for rows where individuals is greater than 10000
ind_gt_10k = homelessness[homelessness["individuals"] > 10000]

# Print the result
print(ind_gt_10k)

# Filter homelessness for rows where region is Mountain, assign result to mountain_reg
mountain_reg = homelessness[homelessness["region"] == "Mountain"]

# Print the filtered DataFrame
print(mountain_reg)

